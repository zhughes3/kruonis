syntax = "proto3";
package models;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

message Timeline {
    uint64 id = 1;
    uint64 group_id = 2;
    string title = 3;
    repeated string tags = 4;
    repeated TimelineEvent events = 5;
    google.protobuf.Timestamp created_at = 6;
    google.protobuf.Timestamp updated_at = 7;
}

message TimelineGroup {
    uint64 id = 1;
    string title = 2;
    repeated Timeline timelines = 3;
    google.protobuf.Timestamp created_at = 4;
    google.protobuf.Timestamp updated_at = 5;
}

message TimelineEvent {
    uint64 id = 1;
    uint64 timeline_id = 2;
    string title = 3;
    google.protobuf.Timestamp timestamp = 4;
    string description = 5;
    string content = 6;
    google.protobuf.Timestamp created_at = 7;
    google.protobuf.Timestamp updated_at = 8;
}

service TimelineService {
    rpc CreateTimeline (Timeline) returns (Timeline) {
        option(google.api.http) = {
            post: "/v1/timelines"
            body: "*"
        };
    }
    rpc ReadTimeline (Filter) returns (Timeline) {
        option (google.api.http) = {
            get: "/v1/timelines/{id}"
        };
    }
//    rpc UpdateTimeline (UpdateTimelineRequest) returns (Timeline) {
//        option (google.api.http) = {
//            put: "/v1/timelines/{id}"
//            body: "*"
//        };
//    }
    rpc DeleteTimeline (Filter) returns (Error) {
        option (google.api.http) = {
            delete: "/v1/timelines/{id}"
        };
    }
    rpc ReadTimelineGroup (Filter) returns (TimelineGroup) {
        option (google.api.http) = {
            get: "/v1/groups/{id}"
        };
    }
//    rpc UpdateTimelineGroup (UpdateTimelineGroupRequest) returns (TimelineGroup) {
//        option (google.api.http) = {
//            put: "/v1/groups/{id}"
//            body: "*"
//        };
//    }
    rpc DeleteTimelineGroup (Filter) returns (Error) {
        option (google.api.http) = {
            delete: "/v1/groups/{id}"
        };
    }
    rpc CreateTimelineEvent (TimelineEvent) returns (TimelineEvent) {
        option(google.api.http) = {
            post: "/v1/events"
            body: "*"
        };
    }
    rpc ReadTimelineEvent(Filter) returns (TimelineEvent) {
        option (google.api.http) = {
            get: "/v1/events/{id}"
        };
    }
//    rpc UpdateTimelineEvent (UpdateTimelineEventRequest) returns (TimelineEvent) {
//        option (google.api.http) = {
//            put: "/v1/events/{id}"
//            body: "*"
//        };
//    }
    rpc DeleteTimelineEvent (Filter) returns (Error) {
        option (google.api.http) = {
            delete: "/v1/timelines/{id}"
        };
    }
}

//message UpdateTimelineRequest {
//    string id = 1;
//    Timeline post = 2;
//}
//
//message UpdateTimelineGroupRequest {
//    string id = 1;
//    TimelineGroup group = 2;
//}
//
//message UpdateTimelineEventRequest {
//    string id = 1;
//    TimelineEvent event = 2;
//}

message Filter {
    uint64 id = 1;
}

message Error {
    bool response = 1;
}