syntax = "proto3";
package models;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info : {
        title: "Timelines",
        version: "0.1"
    };
    schemes: HTTPS;
    consumes: "application/json";
    produces: "application/json";
};

message Timeline {
    uint64 id = 1;
    uint64 group_id = 2;
    string title = 3;
    repeated string tags = 4;
    repeated TimelineEvent events = 5;
    google.protobuf.Timestamp created_at = 6;
    google.protobuf.Timestamp updated_at = 7;
}

message TimelineGroup {
    uint64 id = 1;
    string title = 2;
    repeated Timeline timelines = 3;
    google.protobuf.Timestamp created_at = 4;
    google.protobuf.Timestamp updated_at = 5;
}

message TimelineEvent {
    uint64 event_id = 1;
    uint64 id = 2;
    string title = 3;
    google.protobuf.Timestamp timestamp = 4;
    string description = 5;
    string content = 6;
    google.protobuf.Timestamp created_at = 7;
    google.protobuf.Timestamp updated_at = 8;
}

service TimelineService {
    rpc CreateTimeline (Timeline) returns (Timeline) {
        option(google.api.http) = {
            post: "/v1/timelines"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "Create a new timeline."
        };
    }
    rpc ReadTimeline (Filter) returns (Timeline) {
        option (google.api.http) = {
            get: "/v1/timelines/{id}"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "Get a timeline."
        };
    }
    rpc DeleteTimeline (Filter) returns (Error) {
        option (google.api.http) = {
            delete: "/v1/timelines/{id}"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "Delete a timeline."
        };
    }
    rpc ReadTimelineGroup (Filter) returns (TimelineGroup) {
        option (google.api.http) = {
            get: "/v1/groups/{id}"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "Get a timeline group."
        };
    }
    rpc DeleteTimelineGroup (Filter) returns (Error) {
        option (google.api.http) = {
            delete: "/v1/groups/{id}"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "Delete a timeline group."
        };
    }
    rpc CreateTimelineEvent (TimelineEvent) returns (TimelineEvent) {
        option(google.api.http) = {
            post: "/v1/timelines/{id}/events"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "Add a timeline event to a timeline."
        };
    }
    rpc ReadTimelineEvent(Filter) returns (TimelineEvent) {
        option (google.api.http) = {
            get: "/v1/events/{id}"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "Get a timeline event."
        };
    }
    rpc DeleteTimelineEvent (Filter) returns (Error) {
        option (google.api.http) = {
            delete: "/v1/events/{id}"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "Delete a timeline event."
        };
    }
}

message Filter {
    uint64 id = 1;
}

message Error {
    bool response = 1;
}