// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: timelines.proto

package models

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Timeline struct {
	Id                   uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GroupId              uint64               `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Title                string               `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Tags                 []string             `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Events               []*TimelineEvent     `protobuf:"bytes,5,rep,name=events,proto3" json:"events,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Timeline) Reset()         { *m = Timeline{} }
func (m *Timeline) String() string { return proto.CompactTextString(m) }
func (*Timeline) ProtoMessage()    {}
func (*Timeline) Descriptor() ([]byte, []int) {
	return fileDescriptor_f550dd512d3c8f24, []int{0}
}
func (m *Timeline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timeline.Unmarshal(m, b)
}
func (m *Timeline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timeline.Marshal(b, m, deterministic)
}
func (m *Timeline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timeline.Merge(m, src)
}
func (m *Timeline) XXX_Size() int {
	return xxx_messageInfo_Timeline.Size(m)
}
func (m *Timeline) XXX_DiscardUnknown() {
	xxx_messageInfo_Timeline.DiscardUnknown(m)
}

var xxx_messageInfo_Timeline proto.InternalMessageInfo

func (m *Timeline) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Timeline) GetGroupId() uint64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *Timeline) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Timeline) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Timeline) GetEvents() []*TimelineEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *Timeline) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Timeline) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type TimelineGroup struct {
	Id                   uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Timelines            []*Timeline          `protobuf:"bytes,3,rep,name=timelines,proto3" json:"timelines,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Private              bool                 `protobuf:"varint,6,opt,name=private,proto3" json:"private,omitempty"`
	UserId               uint64               `protobuf:"varint,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Uuid                 string               `protobuf:"bytes,8,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TimelineGroup) Reset()         { *m = TimelineGroup{} }
func (m *TimelineGroup) String() string { return proto.CompactTextString(m) }
func (*TimelineGroup) ProtoMessage()    {}
func (*TimelineGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f550dd512d3c8f24, []int{1}
}
func (m *TimelineGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimelineGroup.Unmarshal(m, b)
}
func (m *TimelineGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimelineGroup.Marshal(b, m, deterministic)
}
func (m *TimelineGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimelineGroup.Merge(m, src)
}
func (m *TimelineGroup) XXX_Size() int {
	return xxx_messageInfo_TimelineGroup.Size(m)
}
func (m *TimelineGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_TimelineGroup.DiscardUnknown(m)
}

var xxx_messageInfo_TimelineGroup proto.InternalMessageInfo

func (m *TimelineGroup) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TimelineGroup) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TimelineGroup) GetTimelines() []*Timeline {
	if m != nil {
		return m.Timelines
	}
	return nil
}

func (m *TimelineGroup) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *TimelineGroup) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *TimelineGroup) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

func (m *TimelineGroup) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *TimelineGroup) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type TimelineEvent struct {
	EventId              uint64               `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Id                   uint64               `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Title                string               `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Description          string               `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Content              string               `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TimelineEvent) Reset()         { *m = TimelineEvent{} }
func (m *TimelineEvent) String() string { return proto.CompactTextString(m) }
func (*TimelineEvent) ProtoMessage()    {}
func (*TimelineEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_f550dd512d3c8f24, []int{2}
}
func (m *TimelineEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimelineEvent.Unmarshal(m, b)
}
func (m *TimelineEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimelineEvent.Marshal(b, m, deterministic)
}
func (m *TimelineEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimelineEvent.Merge(m, src)
}
func (m *TimelineEvent) XXX_Size() int {
	return xxx_messageInfo_TimelineEvent.Size(m)
}
func (m *TimelineEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_TimelineEvent.DiscardUnknown(m)
}

var xxx_messageInfo_TimelineEvent proto.InternalMessageInfo

func (m *TimelineEvent) GetEventId() uint64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *TimelineEvent) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TimelineEvent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TimelineEvent) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *TimelineEvent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TimelineEvent) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *TimelineEvent) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *TimelineEvent) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type Filter struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_f550dd512d3c8f24, []int{3}
}
func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (m *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(m, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

func (m *Filter) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Error struct {
	Response             bool     `protobuf:"varint,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_f550dd512d3c8f24, []int{4}
}
func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetResponse() bool {
	if m != nil {
		return m.Response
	}
	return false
}

type UpdateTimelineEventRequest struct {
	Id                   uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Description          string               `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Content              string               `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateTimelineEventRequest) Reset()         { *m = UpdateTimelineEventRequest{} }
func (m *UpdateTimelineEventRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTimelineEventRequest) ProtoMessage()    {}
func (*UpdateTimelineEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f550dd512d3c8f24, []int{5}
}
func (m *UpdateTimelineEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTimelineEventRequest.Unmarshal(m, b)
}
func (m *UpdateTimelineEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTimelineEventRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTimelineEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTimelineEventRequest.Merge(m, src)
}
func (m *UpdateTimelineEventRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTimelineEventRequest.Size(m)
}
func (m *UpdateTimelineEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTimelineEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTimelineEventRequest proto.InternalMessageInfo

func (m *UpdateTimelineEventRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateTimelineEventRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateTimelineEventRequest) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *UpdateTimelineEventRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateTimelineEventRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type UpdateTimelineRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Tags                 []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTimelineRequest) Reset()         { *m = UpdateTimelineRequest{} }
func (m *UpdateTimelineRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTimelineRequest) ProtoMessage()    {}
func (*UpdateTimelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f550dd512d3c8f24, []int{6}
}
func (m *UpdateTimelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTimelineRequest.Unmarshal(m, b)
}
func (m *UpdateTimelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTimelineRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTimelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTimelineRequest.Merge(m, src)
}
func (m *UpdateTimelineRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTimelineRequest.Size(m)
}
func (m *UpdateTimelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTimelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTimelineRequest proto.InternalMessageInfo

func (m *UpdateTimelineRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateTimelineRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateTimelineRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type UpdateTimelineGroupRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Private              bool     `protobuf:"varint,3,opt,name=private,proto3" json:"private,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTimelineGroupRequest) Reset()         { *m = UpdateTimelineGroupRequest{} }
func (m *UpdateTimelineGroupRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTimelineGroupRequest) ProtoMessage()    {}
func (*UpdateTimelineGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f550dd512d3c8f24, []int{7}
}
func (m *UpdateTimelineGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTimelineGroupRequest.Unmarshal(m, b)
}
func (m *UpdateTimelineGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTimelineGroupRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTimelineGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTimelineGroupRequest.Merge(m, src)
}
func (m *UpdateTimelineGroupRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTimelineGroupRequest.Size(m)
}
func (m *UpdateTimelineGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTimelineGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTimelineGroupRequest proto.InternalMessageInfo

func (m *UpdateTimelineGroupRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateTimelineGroupRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateTimelineGroupRequest) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

type ReadTimelineEventsResponse struct {
	Id                   uint64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Events               []*TimelineEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReadTimelineEventsResponse) Reset()         { *m = ReadTimelineEventsResponse{} }
func (m *ReadTimelineEventsResponse) String() string { return proto.CompactTextString(m) }
func (*ReadTimelineEventsResponse) ProtoMessage()    {}
func (*ReadTimelineEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f550dd512d3c8f24, []int{8}
}
func (m *ReadTimelineEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadTimelineEventsResponse.Unmarshal(m, b)
}
func (m *ReadTimelineEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadTimelineEventsResponse.Marshal(b, m, deterministic)
}
func (m *ReadTimelineEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadTimelineEventsResponse.Merge(m, src)
}
func (m *ReadTimelineEventsResponse) XXX_Size() int {
	return xxx_messageInfo_ReadTimelineEventsResponse.Size(m)
}
func (m *ReadTimelineEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadTimelineEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadTimelineEventsResponse proto.InternalMessageInfo

func (m *ReadTimelineEventsResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReadTimelineEventsResponse) GetEvents() []*TimelineEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

type LoginRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f550dd512d3c8f24, []int{9}
}
func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// The response message containing the JWT token.
type LoginResponse struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f550dd512d3c8f24, []int{10}
}
func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// The user message containing the user.
type User struct {
	Id                   uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                string               `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Hash                 string               `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	IsAdmin              bool                 `protobuf:"varint,4,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_f550dd512d3c8f24, []int{11}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *User) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

func (m *User) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *User) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type SignupRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignupRequest) Reset()         { *m = SignupRequest{} }
func (m *SignupRequest) String() string { return proto.CompactTextString(m) }
func (*SignupRequest) ProtoMessage()    {}
func (*SignupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f550dd512d3c8f24, []int{12}
}
func (m *SignupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignupRequest.Unmarshal(m, b)
}
func (m *SignupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignupRequest.Marshal(b, m, deterministic)
}
func (m *SignupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignupRequest.Merge(m, src)
}
func (m *SignupRequest) XXX_Size() int {
	return xxx_messageInfo_SignupRequest.Size(m)
}
func (m *SignupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignupRequest proto.InternalMessageInfo

func (m *SignupRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SignupRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type RefreshRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshRequest) Reset()         { *m = RefreshRequest{} }
func (m *RefreshRequest) String() string { return proto.CompactTextString(m) }
func (*RefreshRequest) ProtoMessage()    {}
func (*RefreshRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f550dd512d3c8f24, []int{13}
}
func (m *RefreshRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshRequest.Unmarshal(m, b)
}
func (m *RefreshRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshRequest.Marshal(b, m, deterministic)
}
func (m *RefreshRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshRequest.Merge(m, src)
}
func (m *RefreshRequest) XXX_Size() int {
	return xxx_messageInfo_RefreshRequest.Size(m)
}
func (m *RefreshRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshRequest proto.InternalMessageInfo

type RefreshResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshResponse) Reset()         { *m = RefreshResponse{} }
func (m *RefreshResponse) String() string { return proto.CompactTextString(m) }
func (*RefreshResponse) ProtoMessage()    {}
func (*RefreshResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f550dd512d3c8f24, []int{14}
}
func (m *RefreshResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshResponse.Unmarshal(m, b)
}
func (m *RefreshResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshResponse.Marshal(b, m, deterministic)
}
func (m *RefreshResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshResponse.Merge(m, src)
}
func (m *RefreshResponse) XXX_Size() int {
	return xxx_messageInfo_RefreshResponse.Size(m)
}
func (m *RefreshResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshResponse proto.InternalMessageInfo

type MeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MeRequest) Reset()         { *m = MeRequest{} }
func (m *MeRequest) String() string { return proto.CompactTextString(m) }
func (*MeRequest) ProtoMessage()    {}
func (*MeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f550dd512d3c8f24, []int{15}
}
func (m *MeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeRequest.Unmarshal(m, b)
}
func (m *MeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeRequest.Marshal(b, m, deterministic)
}
func (m *MeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeRequest.Merge(m, src)
}
func (m *MeRequest) XXX_Size() int {
	return xxx_messageInfo_MeRequest.Size(m)
}
func (m *MeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MeRequest proto.InternalMessageInfo

type MeResponse struct {
	User                 *User            `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Groups               []*TimelineGroup `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MeResponse) Reset()         { *m = MeResponse{} }
func (m *MeResponse) String() string { return proto.CompactTextString(m) }
func (*MeResponse) ProtoMessage()    {}
func (*MeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f550dd512d3c8f24, []int{16}
}
func (m *MeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeResponse.Unmarshal(m, b)
}
func (m *MeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeResponse.Marshal(b, m, deterministic)
}
func (m *MeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeResponse.Merge(m, src)
}
func (m *MeResponse) XXX_Size() int {
	return xxx_messageInfo_MeResponse.Size(m)
}
func (m *MeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MeResponse proto.InternalMessageInfo

func (m *MeResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *MeResponse) GetGroups() []*TimelineGroup {
	if m != nil {
		return m.Groups
	}
	return nil
}

func init() {
	proto.RegisterType((*Timeline)(nil), "models.Timeline")
	proto.RegisterType((*TimelineGroup)(nil), "models.TimelineGroup")
	proto.RegisterType((*TimelineEvent)(nil), "models.TimelineEvent")
	proto.RegisterType((*Filter)(nil), "models.Filter")
	proto.RegisterType((*Error)(nil), "models.Error")
	proto.RegisterType((*UpdateTimelineEventRequest)(nil), "models.UpdateTimelineEventRequest")
	proto.RegisterType((*UpdateTimelineRequest)(nil), "models.UpdateTimelineRequest")
	proto.RegisterType((*UpdateTimelineGroupRequest)(nil), "models.UpdateTimelineGroupRequest")
	proto.RegisterType((*ReadTimelineEventsResponse)(nil), "models.ReadTimelineEventsResponse")
	proto.RegisterType((*LoginRequest)(nil), "models.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "models.LoginResponse")
	proto.RegisterType((*User)(nil), "models.User")
	proto.RegisterType((*SignupRequest)(nil), "models.SignupRequest")
	proto.RegisterType((*RefreshRequest)(nil), "models.RefreshRequest")
	proto.RegisterType((*RefreshResponse)(nil), "models.RefreshResponse")
	proto.RegisterType((*MeRequest)(nil), "models.MeRequest")
	proto.RegisterType((*MeResponse)(nil), "models.MeResponse")
}

func init() { proto.RegisterFile("timelines.proto", fileDescriptor_f550dd512d3c8f24) }

var fileDescriptor_f550dd512d3c8f24 = []byte{
	// 1355 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xdb, 0x6e, 0xdc, 0x44,
	0x18, 0x96, 0xbd, 0xe7, 0x49, 0xb2, 0x49, 0x26, 0x9b, 0xc6, 0x1d, 0x4e, 0x23, 0x57, 0x15, 0x21,
	0xb4, 0xbb, 0x6d, 0x5a, 0x71, 0x68, 0xa5, 0x0a, 0x03, 0xa5, 0x4a, 0xd5, 0x0a, 0xd5, 0x6d, 0xc5,
	0x05, 0xa0, 0xe2, 0xd8, 0xb3, 0xce, 0xb4, 0x5e, 0x7b, 0xf1, 0x78, 0x13, 0x24, 0xc4, 0x0d, 0x70,
	0x01, 0x77, 0xb0, 0xbc, 0x01, 0xe2, 0x21, 0xb8, 0xe0, 0x21, 0x2a, 0xf1, 0x0a, 0x3c, 0x08, 0x9a,
	0x83, 0xbd, 0x3e, 0x2d, 0x4d, 0xca, 0xd5, 0xee, 0x8c, 0x67, 0xfe, 0xef, 0xff, 0xbe, 0xff, 0xfb,
	0x67, 0x06, 0xac, 0x27, 0x74, 0x42, 0x02, 0x1a, 0x12, 0x36, 0x9c, 0xc6, 0x51, 0x12, 0xc1, 0xf6,
	0x24, 0xf2, 0x48, 0xc0, 0xd0, 0xab, 0x7e, 0x14, 0xf9, 0x01, 0x19, 0x39, 0x53, 0x3a, 0x72, 0xc2,
	0x30, 0x4a, 0x9c, 0x84, 0x46, 0xa1, 0x5a, 0x85, 0xde, 0x50, 0x5f, 0xc5, 0xe8, 0x70, 0x36, 0x1e,
	0xf1, 0x30, 0x2c, 0x71, 0x26, 0x53, 0xb5, 0xe0, 0x92, 0xf8, 0x71, 0x2f, 0xfb, 0x24, 0xbc, 0xcc,
	0x4e, 0x1c, 0xdf, 0x27, 0xf1, 0x28, 0x9a, 0x8a, 0x10, 0xd5, 0x70, 0xe6, 0x8f, 0x3a, 0xe8, 0x3e,
	0x52, 0x89, 0xc0, 0x3e, 0xd0, 0xa9, 0x67, 0x68, 0x58, 0xdb, 0x6d, 0xda, 0x3a, 0xf5, 0xe0, 0x79,
	0xd0, 0xf5, 0xe3, 0x68, 0x36, 0x7d, 0x42, 0x3d, 0x43, 0x17, 0xb3, 0x1d, 0x31, 0x3e, 0xf0, 0xe0,
	0x00, 0xb4, 0x12, 0x9a, 0x04, 0xc4, 0x68, 0x60, 0x6d, 0xb7, 0x67, 0xcb, 0x01, 0x84, 0xa0, 0x99,
	0x38, 0x3e, 0x33, 0x9a, 0xb8, 0xb1, 0xdb, 0xb3, 0xc5, 0x7f, 0x78, 0x19, 0xb4, 0xc9, 0x31, 0x09,
	0x13, 0x66, 0xb4, 0x70, 0x63, 0x77, 0x65, 0x7f, 0x7b, 0x28, 0x79, 0x0e, 0x53, 0xd8, 0xdb, 0xfc,
	0xab, 0xad, 0x16, 0xc1, 0xf7, 0x01, 0x70, 0x63, 0xe2, 0x24, 0xc4, 0x7b, 0xe2, 0x24, 0x46, 0x1b,
	0x6b, 0xbb, 0x2b, 0xfb, 0x68, 0x28, 0x49, 0x0f, 0x53, 0xd2, 0x62, 0xaf, 0x20, 0x6d, 0xf7, 0xd4,
	0x6a, 0x2b, 0xe1, 0x5b, 0x67, 0x53, 0x2f, 0xdd, 0xda, 0x79, 0xf1, 0x56, 0xb5, 0xda, 0x4a, 0xcc,
	0xdf, 0x75, 0xb0, 0x96, 0xe6, 0x73, 0x87, 0x53, 0xac, 0x68, 0x91, 0x11, 0xd6, 0xf3, 0x84, 0x87,
	0xa0, 0x97, 0x95, 0xd1, 0x68, 0x08, 0x7e, 0x1b, 0x65, 0x7e, 0xf6, 0x62, 0x49, 0x89, 0x5d, 0xf3,
	0xe5, 0xd9, 0xb5, 0xce, 0xc0, 0x0e, 0x1a, 0xa0, 0x33, 0x8d, 0xe9, 0xb1, 0x93, 0x10, 0x21, 0x68,
	0xd7, 0x4e, 0x87, 0x70, 0x07, 0x74, 0x66, 0x8c, 0xc4, 0xbc, 0xc0, 0x1d, 0x41, 0xb5, 0xcd, 0x87,
	0x07, 0x1e, 0xaf, 0xe4, 0x6c, 0x46, 0x3d, 0xa3, 0x2b, 0xd8, 0x8a, 0xff, 0xe6, 0x5f, 0x39, 0x91,
	0x44, 0xd1, 0xb8, 0x41, 0x44, 0xd9, 0x9e, 0x64, 0x52, 0x75, 0xc4, 0xf8, 0xc0, 0x53, 0xfa, 0xe9,
	0x55, 0xfd, 0x0a, 0x86, 0x79, 0x4f, 0xea, 0x27, 0x32, 0x3e, 0x8d, 0x1c, 0xd9, 0x62, 0x88, 0xc1,
	0x8a, 0x47, 0x98, 0x1b, 0x53, 0x61, 0x6d, 0xa1, 0x47, 0xcf, 0xce, 0x4f, 0x71, 0xd6, 0x6e, 0x14,
	0x26, 0x24, 0x94, 0x36, 0xea, 0xd9, 0xe9, 0xb0, 0x54, 0x85, 0xce, 0xcb, 0x57, 0xa1, 0x7b, 0x16,
	0x8f, 0x19, 0xa0, 0xfd, 0x09, 0x0d, 0x12, 0x12, 0x97, 0xbd, 0x65, 0x5e, 0x00, 0xad, 0xdb, 0x71,
	0x1c, 0xc5, 0x10, 0x81, 0x6e, 0x4c, 0xd8, 0x34, 0x0a, 0x19, 0x11, 0x9f, 0xbb, 0x76, 0x36, 0x36,
	0xff, 0xd4, 0x00, 0x7a, 0x2c, 0x82, 0x15, 0x1b, 0x87, 0x7c, 0x3d, 0x23, 0x2c, 0x39, 0xa5, 0x5f,
	0x0b, 0x7a, 0x37, 0xfe, 0x87, 0xde, 0xcd, 0xff, 0xd4, 0xbb, 0x55, 0xd0, 0xdb, 0x7c, 0x00, 0xb6,
	0x8b, 0x99, 0x9f, 0x2d, 0xe9, 0xf4, 0x54, 0x69, 0x2c, 0x4e, 0x15, 0xf3, 0x8b, 0xb2, 0x18, 0xa2,
	0x6b, 0xcf, 0x16, 0x37, 0xd7, 0x16, 0x8d, 0x42, 0x5b, 0x98, 0x9f, 0x03, 0x64, 0x13, 0xc7, 0x2b,
	0x08, 0xcd, 0x6c, 0x55, 0x89, 0x4a, 0xf4, 0xc5, 0x09, 0xa7, 0x9f, 0xe2, 0x84, 0x33, 0x3f, 0x00,
	0xab, 0xf7, 0x22, 0x9f, 0x86, 0x69, 0xb2, 0x03, 0xd0, 0x22, 0x13, 0x87, 0x06, 0x22, 0x62, 0xcf,
	0x96, 0x03, 0x6e, 0x85, 0xa9, 0xc3, 0xd8, 0x49, 0x14, 0x7b, 0x2a, 0xeb, 0x6c, 0x6c, 0x5e, 0x04,
	0x6b, 0x2a, 0x82, 0xca, 0x88, 0xf3, 0x8b, 0x9e, 0x91, 0x30, 0x0d, 0x21, 0x06, 0xe6, 0x73, 0x0d,
	0x34, 0x1f, 0xb3, 0xaa, 0xdf, 0x16, 0x88, 0x7a, 0x1e, 0x11, 0x82, 0xe6, 0x91, 0xc3, 0x8e, 0x54,
	0x83, 0x8a, 0xff, 0x5c, 0x22, 0xca, 0x2c, 0x6f, 0x42, 0x65, 0xc5, 0xbb, 0x76, 0x3a, 0x2c, 0xf5,
	0x50, 0xeb, 0xe5, 0x7b, 0xa8, 0x7d, 0x96, 0x1e, 0xb2, 0xc0, 0xda, 0x43, 0xea, 0x87, 0x8b, 0x4a,
	0x9f, 0x5d, 0xbc, 0x0d, 0xd0, 0xb7, 0xc9, 0x38, 0x26, 0xec, 0x48, 0xc5, 0x30, 0x37, 0xc1, 0x7a,
	0x36, 0xa3, 0x9a, 0x6d, 0x05, 0xf4, 0xee, 0xa7, 0x2e, 0x35, 0xbf, 0x04, 0x80, 0x0f, 0x94, 0xd6,
	0x18, 0x34, 0xf9, 0x19, 0x29, 0x00, 0x57, 0xf6, 0x57, 0xd3, 0x5a, 0x73, 0xa1, 0x6d, 0xf1, 0x85,
	0xfb, 0x41, 0x5c, 0x93, 0x4b, 0xfd, 0x20, 0xbd, 0xaa, 0x16, 0xed, 0x3f, 0x5f, 0x07, 0xeb, 0xe9,
	0x97, 0x87, 0x24, 0x3e, 0xa6, 0x2e, 0x81, 0x63, 0xd0, 0x96, 0x3c, 0x61, 0xb6, 0xb9, 0xc0, 0x1b,
	0xad, 0xa5, 0xd3, 0xe2, 0xe0, 0x30, 0xdf, 0x99, 0x5b, 0x06, 0x3a, 0x27, 0x97, 0xe0, 0x71, 0x14,
	0x63, 0x27, 0xc4, 0x8e, 0xeb, 0x46, 0xb3, 0x30, 0x19, 0x7e, 0xff, 0xf7, 0x3f, 0xbf, 0xe9, 0xdb,
	0xe6, 0xc6, 0xe8, 0xf8, 0xea, 0x88, 0xe7, 0xc7, 0x46, 0x4c, 0xac, 0xbb, 0xa1, 0xed, 0xc1, 0x3f,
	0x34, 0xd0, 0x12, 0x56, 0x82, 0x83, 0x34, 0x60, 0xde, 0x9b, 0x68, 0xbb, 0x34, 0xab, 0xe4, 0x09,
	0xe7, 0xd6, 0x03, 0xf4, 0xa9, 0x98, 0xc3, 0x27, 0x34, 0x39, 0xe2, 0x70, 0xe4, 0x1b, 0xca, 0x12,
	0x1a, 0xfa, 0x98, 0x63, 0x84, 0xce, 0x84, 0x60, 0x27, 0xf4, 0x70, 0x2a, 0xfb, 0x10, 0x1f, 0x8c,
	0x31, 0x9b, 0xb9, 0x2e, 0x61, 0x6c, 0x3c, 0x0b, 0x2e, 0xe1, 0x98, 0xb8, 0x84, 0x1e, 0x13, 0x7c,
	0xf7, 0xb3, 0x47, 0x58, 0xd8, 0x55, 0xe6, 0x39, 0x30, 0xd7, 0x17, 0x79, 0x06, 0x1c, 0x80, 0xa7,
	0xf9, 0x83, 0x06, 0x3a, 0xaa, 0x44, 0xf0, 0x5c, 0x9a, 0x52, 0xb1, 0x8a, 0x68, 0xa7, 0x32, 0xaf,
	0x92, 0xbd, 0x33, 0xb7, 0xde, 0x46, 0x6f, 0xa9, 0x59, 0x7c, 0x48, 0x9c, 0x98, 0xc4, 0x12, 0xf2,
	0x26, 0x76, 0x8f, 0x88, 0xfb, 0x0c, 0xd3, 0x31, 0x0e, 0x22, 0xdf, 0x27, 0x1e, 0xa6, 0x2a, 0x8d,
	0x2d, 0xb8, 0xb9, 0x48, 0x23, 0x56, 0xc8, 0xbf, 0x68, 0x40, 0xbf, 0x4f, 0xe0, 0x66, 0x0a, 0x94,
	0x39, 0x04, 0xc1, 0xfc, 0x94, 0x82, 0x75, 0xe7, 0xd6, 0x3d, 0x74, 0xf7, 0x0e, 0x49, 0x84, 0x20,
	0x69, 0x35, 0x30, 0x0d, 0xc7, 0x51, 0x3c, 0x11, 0x6f, 0xb0, 0x4b, 0x98, 0x86, 0x6e, 0x30, 0xf3,
	0xb8, 0x68, 0xd9, 0x13, 0x01, 0x3b, 0x8c, 0x45, 0x2e, 0xe5, 0x7e, 0x57, 0xd2, 0xe6, 0xcb, 0xd8,
	0x87, 0xab, 0x8b, 0xbc, 0x26, 0x04, 0x52, 0xd0, 0xff, 0x48, 0xf4, 0x55, 0xf6, 0x86, 0xab, 0x3c,
	0x3f, 0x50, 0x65, 0xc6, 0xbc, 0x26, 0xdc, 0x22, 0x37, 0x62, 0x07, 0x87, 0xe4, 0x24, 0xc3, 0x97,
	0x30, 0xd0, 0x5c, 0xe3, 0x30, 0x59, 0x52, 0xbc, 0x06, 0x5f, 0x81, 0xd5, 0xfc, 0x99, 0x08, 0xfb,
	0x69, 0x58, 0x79, 0xa9, 0xd5, 0xc0, 0x0c, 0xe7, 0xd6, 0x26, 0x5a, 0xe7, 0x0a, 0x38, 0xa5, 0xf8,
	0x03, 0x08, 0x0b, 0xf1, 0x47, 0xdf, 0x52, 0xef, 0x3b, 0x78, 0x02, 0xfa, 0xc5, 0x33, 0x1d, 0xbe,
	0x96, 0x75, 0x57, 0xdd, 0xf5, 0x51, 0x03, 0x79, 0x7d, 0x6e, 0x0d, 0x10, 0x94, 0xab, 0x2b, 0xa8,
	0x3b, 0xa8, 0x06, 0x95, 0x53, 0x3b, 0x04, 0xfd, 0x8f, 0x49, 0x40, 0x72, 0xc0, 0x65, 0x72, 0xa5,
	0x76, 0xbb, 0x2a, 0x60, 0xe4, 0x9e, 0x2a, 0xb9, 0xbd, 0x3a, 0x72, 0x13, 0xb0, 0x99, 0x97, 0x4f,
	0x3d, 0x32, 0x4b, 0x30, 0xf5, 0x27, 0x05, 0x87, 0xdb, 0x41, 0xdb, 0x45, 0x21, 0xb1, 0x38, 0x3d,
	0x24, 0xe2, 0x26, 0x14, 0x4d, 0x23, 0xcf, 0x13, 0x09, 0xf7, 0xb3, 0x06, 0xb6, 0x6a, 0x2e, 0x48,
	0x68, 0xd6, 0x2b, 0x9a, 0xbf, 0x3d, 0x97, 0x65, 0xf1, 0xee, 0xdc, 0x42, 0xc8, 0xa8, 0x68, 0x9b,
	0x4f, 0x64, 0x80, 0xca, 0x89, 0x70, 0x79, 0x9f, 0x82, 0xad, 0xa2, 0xbc, 0xf5, 0xe4, 0x4b, 0x1a,
	0x5f, 0x17, 0x70, 0x15, 0x8d, 0x0b, 0xbc, 0xf7, 0x2a, 0xbc, 0x7f, 0xd5, 0xc0, 0x56, 0xb1, 0x23,
	0xe4, 0x4b, 0xb5, 0xfe, 0x4e, 0x46, 0xf5, 0xd3, 0xe6, 0xbd, 0xb9, 0x75, 0x11, 0x5d, 0xb0, 0x3c,
	0x2f, 0x0f, 0x2c, 0xae, 0x6f, 0x9c, 0x44, 0x95, 0x82, 0xbf, 0x6e, 0x9e, 0xaf, 0x16, 0x7c, 0x24,
	0x6f, 0x7b, 0xce, 0xff, 0x27, 0x0d, 0xc0, 0xea, 0x73, 0xa2, 0xc2, 0xdf, 0x5c, 0x1c, 0x60, 0xcb,
	0x9e, 0x1e, 0xe6, 0x2d, 0x21, 0x4a, 0xd1, 0x09, 0x6f, 0x32, 0x99, 0x1a, 0x93, 0xd9, 0xbc, 0x02,
	0x97, 0x67, 0x53, 0x76, 0xa1, 0xd4, 0xe6, 0x85, 0x2e, 0x94, 0xa2, 0xd4, 0xba, 0x50, 0xc4, 0x2d,
	0xb8, 0x50, 0x22, 0x2d, 0x73, 0xa1, 0x44, 0x5c, 0xe2, 0xc2, 0xfc, 0x83, 0x76, 0x59, 0x16, 0xcb,
	0x5c, 0x98, 0x4b, 0x44, 0xb9, 0x30, 0x97, 0x48, 0xad, 0x0b, 0xeb, 0xc9, 0x9f, 0xd2, 0x85, 0x79,
	0xde, 0x7b, 0x65, 0xb8, 0x0f, 0x6f, 0xcd, 0xad, 0x9b, 0x10, 0x82, 0x5e, 0x0a, 0xc5, 0xf6, 0x5b,
	0x57, 0x86, 0x57, 0x87, 0x57, 0xf6, 0x34, 0x7d, 0x7f, 0xc3, 0x99, 0x4e, 0x03, 0xea, 0x8a, 0x1b,
	0x60, 0xf4, 0x94, 0x45, 0xe1, 0x8d, 0xca, 0xcc, 0x61, 0x5b, 0xbc, 0x82, 0xae, 0xfd, 0x1b, 0x00,
	0x00, 0xff, 0xff, 0xb3, 0x5c, 0x93, 0x0f, 0x24, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TimelineServiceClient is the client API for TimelineService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TimelineServiceClient interface {
	Signup(ctx context.Context, in *SignupRequest, opts ...grpc.CallOption) (*Error, error)
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	Refresh(ctx context.Context, in *RefreshRequest, opts ...grpc.CallOption) (*RefreshResponse, error)
	Me(ctx context.Context, in *MeRequest, opts ...grpc.CallOption) (*MeResponse, error)
	CreateTimeline(ctx context.Context, in *Timeline, opts ...grpc.CallOption) (*Timeline, error)
	ReadTimeline(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*Timeline, error)
	UpdateTimeline(ctx context.Context, in *UpdateTimelineRequest, opts ...grpc.CallOption) (*Timeline, error)
	DeleteTimeline(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*Error, error)
	ReadTimelineGroup(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*TimelineGroup, error)
	UpdateTimelineGroup(ctx context.Context, in *UpdateTimelineGroupRequest, opts ...grpc.CallOption) (*TimelineGroup, error)
	DeleteTimelineGroup(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*Error, error)
	CreateTimelineEvent(ctx context.Context, in *TimelineEvent, opts ...grpc.CallOption) (*TimelineEvent, error)
	ReadTimelineEvents(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*ReadTimelineEventsResponse, error)
	ReadTimelineEvent(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*TimelineEvent, error)
	UpdateTimelineEvent(ctx context.Context, in *UpdateTimelineEventRequest, opts ...grpc.CallOption) (*TimelineEvent, error)
	DeleteTimelineEvent(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*Error, error)
}

type timelineServiceClient struct {
	cc *grpc.ClientConn
}

func NewTimelineServiceClient(cc *grpc.ClientConn) TimelineServiceClient {
	return &timelineServiceClient{cc}
}

func (c *timelineServiceClient) Signup(ctx context.Context, in *SignupRequest, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/models.TimelineService/Signup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timelineServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/models.TimelineService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timelineServiceClient) Refresh(ctx context.Context, in *RefreshRequest, opts ...grpc.CallOption) (*RefreshResponse, error) {
	out := new(RefreshResponse)
	err := c.cc.Invoke(ctx, "/models.TimelineService/Refresh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timelineServiceClient) Me(ctx context.Context, in *MeRequest, opts ...grpc.CallOption) (*MeResponse, error) {
	out := new(MeResponse)
	err := c.cc.Invoke(ctx, "/models.TimelineService/Me", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timelineServiceClient) CreateTimeline(ctx context.Context, in *Timeline, opts ...grpc.CallOption) (*Timeline, error) {
	out := new(Timeline)
	err := c.cc.Invoke(ctx, "/models.TimelineService/CreateTimeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timelineServiceClient) ReadTimeline(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*Timeline, error) {
	out := new(Timeline)
	err := c.cc.Invoke(ctx, "/models.TimelineService/ReadTimeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timelineServiceClient) UpdateTimeline(ctx context.Context, in *UpdateTimelineRequest, opts ...grpc.CallOption) (*Timeline, error) {
	out := new(Timeline)
	err := c.cc.Invoke(ctx, "/models.TimelineService/UpdateTimeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timelineServiceClient) DeleteTimeline(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/models.TimelineService/DeleteTimeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timelineServiceClient) ReadTimelineGroup(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*TimelineGroup, error) {
	out := new(TimelineGroup)
	err := c.cc.Invoke(ctx, "/models.TimelineService/ReadTimelineGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timelineServiceClient) UpdateTimelineGroup(ctx context.Context, in *UpdateTimelineGroupRequest, opts ...grpc.CallOption) (*TimelineGroup, error) {
	out := new(TimelineGroup)
	err := c.cc.Invoke(ctx, "/models.TimelineService/UpdateTimelineGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timelineServiceClient) DeleteTimelineGroup(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/models.TimelineService/DeleteTimelineGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timelineServiceClient) CreateTimelineEvent(ctx context.Context, in *TimelineEvent, opts ...grpc.CallOption) (*TimelineEvent, error) {
	out := new(TimelineEvent)
	err := c.cc.Invoke(ctx, "/models.TimelineService/CreateTimelineEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timelineServiceClient) ReadTimelineEvents(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*ReadTimelineEventsResponse, error) {
	out := new(ReadTimelineEventsResponse)
	err := c.cc.Invoke(ctx, "/models.TimelineService/ReadTimelineEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timelineServiceClient) ReadTimelineEvent(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*TimelineEvent, error) {
	out := new(TimelineEvent)
	err := c.cc.Invoke(ctx, "/models.TimelineService/ReadTimelineEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timelineServiceClient) UpdateTimelineEvent(ctx context.Context, in *UpdateTimelineEventRequest, opts ...grpc.CallOption) (*TimelineEvent, error) {
	out := new(TimelineEvent)
	err := c.cc.Invoke(ctx, "/models.TimelineService/UpdateTimelineEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timelineServiceClient) DeleteTimelineEvent(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/models.TimelineService/DeleteTimelineEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TimelineServiceServer is the server API for TimelineService service.
type TimelineServiceServer interface {
	Signup(context.Context, *SignupRequest) (*Error, error)
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	Refresh(context.Context, *RefreshRequest) (*RefreshResponse, error)
	Me(context.Context, *MeRequest) (*MeResponse, error)
	CreateTimeline(context.Context, *Timeline) (*Timeline, error)
	ReadTimeline(context.Context, *Filter) (*Timeline, error)
	UpdateTimeline(context.Context, *UpdateTimelineRequest) (*Timeline, error)
	DeleteTimeline(context.Context, *Filter) (*Error, error)
	ReadTimelineGroup(context.Context, *Filter) (*TimelineGroup, error)
	UpdateTimelineGroup(context.Context, *UpdateTimelineGroupRequest) (*TimelineGroup, error)
	DeleteTimelineGroup(context.Context, *Filter) (*Error, error)
	CreateTimelineEvent(context.Context, *TimelineEvent) (*TimelineEvent, error)
	ReadTimelineEvents(context.Context, *Filter) (*ReadTimelineEventsResponse, error)
	ReadTimelineEvent(context.Context, *Filter) (*TimelineEvent, error)
	UpdateTimelineEvent(context.Context, *UpdateTimelineEventRequest) (*TimelineEvent, error)
	DeleteTimelineEvent(context.Context, *Filter) (*Error, error)
}

// UnimplementedTimelineServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTimelineServiceServer struct {
}

func (*UnimplementedTimelineServiceServer) Signup(ctx context.Context, req *SignupRequest) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Signup not implemented")
}
func (*UnimplementedTimelineServiceServer) Login(ctx context.Context, req *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedTimelineServiceServer) Refresh(ctx context.Context, req *RefreshRequest) (*RefreshResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Refresh not implemented")
}
func (*UnimplementedTimelineServiceServer) Me(ctx context.Context, req *MeRequest) (*MeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Me not implemented")
}
func (*UnimplementedTimelineServiceServer) CreateTimeline(ctx context.Context, req *Timeline) (*Timeline, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTimeline not implemented")
}
func (*UnimplementedTimelineServiceServer) ReadTimeline(ctx context.Context, req *Filter) (*Timeline, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadTimeline not implemented")
}
func (*UnimplementedTimelineServiceServer) UpdateTimeline(ctx context.Context, req *UpdateTimelineRequest) (*Timeline, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTimeline not implemented")
}
func (*UnimplementedTimelineServiceServer) DeleteTimeline(ctx context.Context, req *Filter) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTimeline not implemented")
}
func (*UnimplementedTimelineServiceServer) ReadTimelineGroup(ctx context.Context, req *Filter) (*TimelineGroup, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadTimelineGroup not implemented")
}
func (*UnimplementedTimelineServiceServer) UpdateTimelineGroup(ctx context.Context, req *UpdateTimelineGroupRequest) (*TimelineGroup, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTimelineGroup not implemented")
}
func (*UnimplementedTimelineServiceServer) DeleteTimelineGroup(ctx context.Context, req *Filter) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTimelineGroup not implemented")
}
func (*UnimplementedTimelineServiceServer) CreateTimelineEvent(ctx context.Context, req *TimelineEvent) (*TimelineEvent, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTimelineEvent not implemented")
}
func (*UnimplementedTimelineServiceServer) ReadTimelineEvents(ctx context.Context, req *Filter) (*ReadTimelineEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadTimelineEvents not implemented")
}
func (*UnimplementedTimelineServiceServer) ReadTimelineEvent(ctx context.Context, req *Filter) (*TimelineEvent, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadTimelineEvent not implemented")
}
func (*UnimplementedTimelineServiceServer) UpdateTimelineEvent(ctx context.Context, req *UpdateTimelineEventRequest) (*TimelineEvent, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTimelineEvent not implemented")
}
func (*UnimplementedTimelineServiceServer) DeleteTimelineEvent(ctx context.Context, req *Filter) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTimelineEvent not implemented")
}

func RegisterTimelineServiceServer(s *grpc.Server, srv TimelineServiceServer) {
	s.RegisterService(&_TimelineService_serviceDesc, srv)
}

func _TimelineService_Signup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimelineServiceServer).Signup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.TimelineService/Signup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimelineServiceServer).Signup(ctx, req.(*SignupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimelineService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimelineServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.TimelineService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimelineServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimelineService_Refresh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimelineServiceServer).Refresh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.TimelineService/Refresh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimelineServiceServer).Refresh(ctx, req.(*RefreshRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimelineService_Me_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimelineServiceServer).Me(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.TimelineService/Me",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimelineServiceServer).Me(ctx, req.(*MeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimelineService_CreateTimeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Timeline)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimelineServiceServer).CreateTimeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.TimelineService/CreateTimeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimelineServiceServer).CreateTimeline(ctx, req.(*Timeline))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimelineService_ReadTimeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Filter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimelineServiceServer).ReadTimeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.TimelineService/ReadTimeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimelineServiceServer).ReadTimeline(ctx, req.(*Filter))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimelineService_UpdateTimeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTimelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimelineServiceServer).UpdateTimeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.TimelineService/UpdateTimeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimelineServiceServer).UpdateTimeline(ctx, req.(*UpdateTimelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimelineService_DeleteTimeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Filter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimelineServiceServer).DeleteTimeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.TimelineService/DeleteTimeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimelineServiceServer).DeleteTimeline(ctx, req.(*Filter))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimelineService_ReadTimelineGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Filter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimelineServiceServer).ReadTimelineGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.TimelineService/ReadTimelineGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimelineServiceServer).ReadTimelineGroup(ctx, req.(*Filter))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimelineService_UpdateTimelineGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTimelineGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimelineServiceServer).UpdateTimelineGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.TimelineService/UpdateTimelineGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimelineServiceServer).UpdateTimelineGroup(ctx, req.(*UpdateTimelineGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimelineService_DeleteTimelineGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Filter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimelineServiceServer).DeleteTimelineGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.TimelineService/DeleteTimelineGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimelineServiceServer).DeleteTimelineGroup(ctx, req.(*Filter))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimelineService_CreateTimelineEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TimelineEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimelineServiceServer).CreateTimelineEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.TimelineService/CreateTimelineEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimelineServiceServer).CreateTimelineEvent(ctx, req.(*TimelineEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimelineService_ReadTimelineEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Filter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimelineServiceServer).ReadTimelineEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.TimelineService/ReadTimelineEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimelineServiceServer).ReadTimelineEvents(ctx, req.(*Filter))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimelineService_ReadTimelineEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Filter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimelineServiceServer).ReadTimelineEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.TimelineService/ReadTimelineEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimelineServiceServer).ReadTimelineEvent(ctx, req.(*Filter))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimelineService_UpdateTimelineEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTimelineEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimelineServiceServer).UpdateTimelineEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.TimelineService/UpdateTimelineEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimelineServiceServer).UpdateTimelineEvent(ctx, req.(*UpdateTimelineEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimelineService_DeleteTimelineEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Filter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimelineServiceServer).DeleteTimelineEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.TimelineService/DeleteTimelineEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimelineServiceServer).DeleteTimelineEvent(ctx, req.(*Filter))
	}
	return interceptor(ctx, in, info, handler)
}

var _TimelineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "models.TimelineService",
	HandlerType: (*TimelineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Signup",
			Handler:    _TimelineService_Signup_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _TimelineService_Login_Handler,
		},
		{
			MethodName: "Refresh",
			Handler:    _TimelineService_Refresh_Handler,
		},
		{
			MethodName: "Me",
			Handler:    _TimelineService_Me_Handler,
		},
		{
			MethodName: "CreateTimeline",
			Handler:    _TimelineService_CreateTimeline_Handler,
		},
		{
			MethodName: "ReadTimeline",
			Handler:    _TimelineService_ReadTimeline_Handler,
		},
		{
			MethodName: "UpdateTimeline",
			Handler:    _TimelineService_UpdateTimeline_Handler,
		},
		{
			MethodName: "DeleteTimeline",
			Handler:    _TimelineService_DeleteTimeline_Handler,
		},
		{
			MethodName: "ReadTimelineGroup",
			Handler:    _TimelineService_ReadTimelineGroup_Handler,
		},
		{
			MethodName: "UpdateTimelineGroup",
			Handler:    _TimelineService_UpdateTimelineGroup_Handler,
		},
		{
			MethodName: "DeleteTimelineGroup",
			Handler:    _TimelineService_DeleteTimelineGroup_Handler,
		},
		{
			MethodName: "CreateTimelineEvent",
			Handler:    _TimelineService_CreateTimelineEvent_Handler,
		},
		{
			MethodName: "ReadTimelineEvents",
			Handler:    _TimelineService_ReadTimelineEvents_Handler,
		},
		{
			MethodName: "ReadTimelineEvent",
			Handler:    _TimelineService_ReadTimelineEvent_Handler,
		},
		{
			MethodName: "UpdateTimelineEvent",
			Handler:    _TimelineService_UpdateTimelineEvent_Handler,
		},
		{
			MethodName: "DeleteTimelineEvent",
			Handler:    _TimelineService_DeleteTimelineEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "timelines.proto",
}
